{"ast":null,"code":"import axios from 'axios';\n\n// 创建axios实例\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:8000/api/v1',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 产品API\nexport const productApi = {\n  // 获取推荐产品\n  getFeaturedProducts: async (limit = 10) => {\n    try {\n      const response = await apiClient.get(`/search/featured?limit=${limit}`);\n      return response.data;\n    } catch (error) {\n      console.error('获取推荐产品失败', error);\n      throw error;\n    }\n  },\n  // 根据ID获取产品详情\n  getProductDetail: async productId => {\n    try {\n      const response = await apiClient.get(`/products/${productId}`);\n      return response.data;\n    } catch (error) {\n      console.error('获取产品详情失败', error);\n      throw error;\n    }\n  },\n  // 自然语言搜索产品\n  searchProducts: async (query, page = 1, limit = 10) => {\n    try {\n      const response = await apiClient.post('/search/natural', {\n        query,\n        page,\n        limit\n      });\n      return response.data;\n    } catch (error) {\n      console.error('搜索产品失败', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","headers","productApi","getFeaturedProducts","limit","response","get","data","error","console","getProductDetail","productId","searchProducts","query","page","post"],"sources":["/Users/edson/ecommerce-ai-assistant/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\n\n// 创建axios实例\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:8000/api/v1',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 产品API\nexport const productApi = {\n  // 获取推荐产品\n  getFeaturedProducts: async (limit = 10) => {\n    try {\n      const response = await apiClient.get(`/search/featured?limit=${limit}`);\n      return response.data;\n    } catch (error) {\n      console.error('获取推荐产品失败', error);\n      throw error;\n    }\n  },\n  \n  // 根据ID获取产品详情\n  getProductDetail: async (productId) => {\n    try {\n      const response = await apiClient.get(`/products/${productId}`);\n      return response.data;\n    } catch (error) {\n      console.error('获取产品详情失败', error);\n      throw error;\n    }\n  },\n  \n  // 自然语言搜索产品\n  searchProducts: async (query, page = 1, limit = 10) => {\n    try {\n      const response = await apiClient.post('/search/natural', {\n        query,\n        page,\n        limit\n      });\n      return response.data;\n    } catch (error) {\n      console.error('搜索产品失败', error);\n      throw error;\n    }\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,8BAA8B;EACvCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,UAAU,GAAG;EACxB;EACAC,mBAAmB,EAAE,MAAAA,CAAOC,KAAK,GAAG,EAAE,KAAK;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,SAAS,CAACQ,GAAG,CAAC,0BAA0BF,KAAK,EAAE,CAAC;MACvE,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAChC,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,gBAAgB,EAAE,MAAOC,SAAS,IAAK;IACrC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMP,SAAS,CAACQ,GAAG,CAAC,aAAaK,SAAS,EAAE,CAAC;MAC9D,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAChC,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAI,cAAc,EAAE,MAAAA,CAAOC,KAAK,EAAEC,IAAI,GAAG,CAAC,EAAEV,KAAK,GAAG,EAAE,KAAK;IACrD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,SAAS,CAACiB,IAAI,CAAC,iBAAiB,EAAE;QACvDF,KAAK;QACLC,IAAI;QACJV;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}